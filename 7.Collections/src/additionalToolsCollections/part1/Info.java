package additionalToolsCollections.part1;

public class Info {

    //Collections

    //    List nCopies (times, Object) – возвращает коллекцию с заданным количеством одинаковых объектов (Object);
    //    int frequency (Collection, Object) – возвращает количество вхождений Object в Collection;
    //    void sort (List), void sort (List, Comparator) – сортировка списка (копирование списка в массив, сортировка слиянием массива, копирование обратно в список);
    //    void shuffle (List) – перетасовывает элементы списка случайным образом.

    //    int binarySearch (List, T) – находит индекс элемента в отсортированном списке;
    //    unmodifiableList (List), unmodifiableSet (Set), unmodifiableMap (Map) – возвращает неизменяемые коллекции;
    //    synchronizedList (List), synchronizedSet (Set), synchronizedMap (Map) – возвращает синхронизированные коллекции;
    //    checkedList (List), checkedSet (Set), checkedMap (Map) – создают проверяемые коллекции (при добавлении в «сырую» коллекцию неверного типа будет сгенерировано исключение ClassCastException сразу);
    //    T max (Collection) – находит максимальный элемент в коллекции;
    //    T min (Collection) – находит минимальный элемент в коллекции;


    //Set

    //    Объединение: addAll (Set) – добавляет в множество все элементы из другого множества;
    //    Пересечение: retainAll (Set) – оставляет в множестве только те элементы, которые есть во втором множестве;
    //    Разность: removeAll (Set) – удаляет из множества те элементы, которые есть во втором множестве;
    //    descendingSet - возвращает развернутое в обратном порядке множество

    //Map

    //    V getOrDefault (K key, V default) – возвращает значение по ключу. Если ключ не найден, то возвращается значение по умолчанию;
    //    V putIfAbsent (K, V) – добавляет запись в отображение. Если идентичная запись уже есть в отображении, возвращается null. Если ключ уже есть в отображении, но значения отличаются, обновление значения не происходит, возвращается существующее значение.



}
